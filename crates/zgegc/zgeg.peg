rule file = item* trivia EOF;
rule item = item_function;
rule item_function = FUN IDENT PAREN_L PAREN_R block;

rule block = BRACES_L statement* BRACES_R;
rule statement = expr SEMICOLON;

rule expr = expr_op_prefix? expr_atom expr_op_postfix? (expr_op_infix expr)?;
rule expr_atom = PAREN_L expr PAREN_R / number / string / function_call / IDENT;
rule expr_op_infix = PLUS / HYPHEN / STAR / SLASH_F;
rule expr_op_prefix = PLUS / HYPHEN;
rule expr_op_postfix = QUESTION_MARK;

rule function_call = IDENT PAREN_L (expr COMMA)* (expr COMMA?)? PAREN_R;

token IDENT = trivia !kw [a-zA-Z_] [a-zA-Z0-9_]*;

rule number = INTEGER / FLOATING;
token INTEGER = trivia [0-9]+ ![a-zA-Z0-9];
token FLOATING = trivia [0-9]+ "." [0-9]* [fF] ![a-zA-Z0-9];

rule string = STRING_LITERAL;
token STRING_LITERAL = trivia "\"" (!"\"" .)* "\"";

token WHITESPACE = [ \t\n\r];
token COMMENT = "//" (!EOL .)* EOL;
rule trivia = (WHITESPACE / COMMENT)*;

token EOF = !.;
token EOL = "\n" / "\r\n" / "\r";

rule eokw = ![a-zA-Z0-9_];
rule kw = FUN;
token FUN = trivia "fun" eokw;

token DOT = trivia "." !".";
token DOTDOT = trivia "..";
token COMMA = trivia ",";
token SEMICOLON = trivia ";";
token PLUS = trivia "+" !"+";
token PLUSPLUS = trivia "++";
token HYPHEN = trivia "-" !"-";
token HYPHENHYPHEN = trivia "--";
token SLASH_F = trivia "/" !"/";
token QUESTION_MARK = trivia "?";
token STAR = trivia "*" !"**";
token STARSTAR = trivia "**";
token PAREN_L = trivia "(";
token PAREN_R = trivia ")";
token BRACES_L = trivia "{";
token BRACES_R = trivia "}";

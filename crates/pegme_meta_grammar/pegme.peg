// Not actually used, just for reference.

rule file = item_rule* trivia EOF;
rule item_rule = rule_kind IDENT EQUAL expr SEMICOLON;
rule rule_kind = RULE;

rule expr = expr_choice;
rule expr_choice = expr_seq (SLASH_F expr_seq)*;
rule expr_seq = expr_predicate+;
rule expr_predicate = predicate_op? expr_repeat;
rule expr_repeat = expr_atom repeat_op?;
rule expr_atom = PAREN_L expr PAREN_R / IDENT / DOT / LITERAL / ranges;

rule predicate_op = AND / BANG;
rule repeat_op = STAR / PLUS / QUESTION;

rule ranges = trivia "[" (range_range / RANGE_SOLO)* "]";
rule range_range = RANGE_SOLO "-" RANGE_SOLO;
token RANGE_SOLO = "\\" . / !"]" .;

rule trivia = (WHITESPACE / COMMENT)*;
rule WHITESPACE = [ \t\n\r]+;
rule COMMENT = "//" + (!eol .)* eol;
rule EOL = "\n" / "\r\n" / "\r" / eof;
rule EOF = !.;
rule eokw = ![a-za-z0-9_];

token LITERAL = trivia "\"" ("\\" . / !"\"" .)* "\"";
token IDENT = trivia !kw [a-za-z_] [a-za-z0-9_]*;
rule kw = rule;

token RULE = trivia "rule" eokw;
token EQUAL = trivia "=";
token SLASH_F = trivia "/";
token AND = trivia "&";
token BANG = trivia "!";
token STAR = trivia "*";
token PLUS = trivia "+";
token QUESTION = trivia "?";
token COLON = trivia ",";
token SEMICOLON = trivia ";";
token PAREN_L = trivia "(";
token PAREN_R = trivia ")";
token BRACES_L = trivia "{";
token BRACES_R = trivia "}";

rule File = Item* Trivia EOF;
rule Item = ItemFunction;
rule ItemFunction = FUN IDENT PAREN_L PAREN_R Block;

rule Block = BRACES_L Statement* BRACES_R;
rule Statement = Expr SEMICOLON;

rule Expr = ExprOpPrefix? ExprAtom ExprOpPostfix? (ExprOpInfix Expr)?;
rule ExprAtom = PAREN_L Expr PAREN_R / Number / String / FunctionCall;
rule ExprOpInfix = PLUS / HYPHEN / STAR / SLASH_F;
rule ExprOpPrefix = PLUS / HYPHEN;
rule ExprOpSuffix = QUESTION_MARK;

rule FunctionCall = IDENT PAREN_L Expr{0,*,COMMA} PAREN_R;

token IDENT = Trivia !KW [a-zA-Z_] [a-zA-Z0-9_]*;

rule Number = INTEGER / FLOATING;
token INTEGER = Trivia [0-9]+ ![a-zA-Z0-9];
token FLOATING = Trivia [0-9]+ "." [0-9]* [fF] ![a-zA-Z0-9];

rule String = STRING_LITERAL;
token STRING_LITERAL = Trivia "\"" (!"'" .)* "\"";

rule Whitespace = [ \t\n\r];
rule Comment = "//" (!EOL .)* EOL;
rule Trivia = (Whitespace | Comment)*;

rule EOF = !.;
rule EOL = "\n" / "\r\n" / "\r";

rule EOKW = ![a-zA-Z0-9_];
rule KW = FUN;
token FUN = Trivia "fun" EOKW;

token DOT = Trivia "." !".";
token DOTDOT = Trivia "..";
token COMMA = Trivia ",";
token SEMICOLON = Trivia ";";
token PLUS = Trivia "+" !"+";
token PLUSPLUS = Trivia "++";
token HYPHEN = Trivia "-" !"-";
token HYPHENHYPHEN = Trivia "--";
token STAR = Trivia "*" !"**";
token STARSTAR = Trivia "**";
token SLASH_F = Trivia "/" !"/";
token PAREN_L = Trivia "(";
token PAREN_R = Trivia ")";
token BRACES_L = Trivia "{";
token BRACES_R = Trivia "}";

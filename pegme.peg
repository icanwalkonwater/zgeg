rule File = Rule* Trivia EOF;
rule Rule = RuleKind IDENT EQUAL Expr SEMICOLON;
rule RuleKind = RULE;

rule Expr = ExprChoice;
rule ExprChoice = ExprSeq (SLASH_F ExprSeq)*;
rule ExprSeq = ExprPredicate+;
rule ExprPredicate = (AMPERSAND / EXCLAMATION)? ExprRepeat;
rule ExprRepeat = ExprAtom RepeatOp?;
rule ExprAtom = PAREN_L Expr PAREN_R / IDENT / DOT / Keyword / CharacterRanges;

rule RepeatOp = STAR / PLUS;
rule Keyword = "\"" ("\\" . / !"\"" .)* "\"";
rule CharacterRanges = Trivia "[" (. "-" !"]" . / !"]" .)* "]";

rule Whitespace = [ \t\n\r]+;
rule Comment = "//" + (!EOL .)* EOL;
rule Trivia = (Whitespace / Comment)*;
rule EOL = "\n" / "\r\n" / "\r" / EOF;
rule EOF = !.;
rule EOKW = ![a-zA-Z0-9_];

token IDENT = Trivia !KW [a-zA-Z_] [a-zA-Z0-9_]*;
rule KW = RULE;
token INTEGER = Trivia [0-9] ![a-zA-Z0-9_];

token RULE = Trivia "rule" EOKW;
token EQUAL = Trivia "=";
token SLASH_F = Trivia "/";
token AMPERSAND = Trivia "&";
token EXCLAMATION = Trivia "!";
token STAR = Trivia "*";
token PLUS = Trivia "+";
token COLON = Trivia ",";
token SEMICOLON = Trivia ";";
token PAREN_L = Trivia "(";
token PAREN_R = Trivia ")";
token BRACES_L = Trivia "{";
token BRACES_R = Trivia "}";
